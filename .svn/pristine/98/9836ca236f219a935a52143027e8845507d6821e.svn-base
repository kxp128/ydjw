package com.ehootu.sys.controller;

import com.ehootu.core.generic.BaseController;
import com.ehootu.core.util.ApplicationUtils;
import com.ehootu.core.util.R;
import com.ehootu.core.util.ShiroUtils;
import com.ehootu.core.util.SysLog;
import com.ehootu.sys.entity.SysLogEntity;
import com.ehootu.sys.entity.SysUserEntity;
import com.ehootu.sys.service.SysLogService;
import com.ehootu.sys.service.SysUserService;
import com.ehootu.sys.service.SysUserTokenService;
import com.google.code.kaptcha.Constants;
import com.google.code.kaptcha.Producer;
import org.apache.commons.io.IOUtils;
import org.apache.shiro.authc.UsernamePasswordToken;
import org.apache.shiro.crypto.hash.Sha256Hash;
import org.apache.shiro.subject.Subject;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RestController;

import javax.imageio.ImageIO;
import javax.servlet.ServletException;
import javax.servlet.ServletOutputStream;
import javax.servlet.http.HttpServletResponse;
import java.awt.image.BufferedImage;
import java.io.IOException;
import java.util.Map;

/**
 * 登录相关
 * 
 * @author chenshun
 * @email sunlightcs@gmail.com
 * @date 2016年11月10日 下午1:15:31
 */
@RestController
public class SysLoginController{
	@Autowired
	private Producer producer;
	@Autowired
	private SysUserService sysUserService;
	@Autowired
	private SysUserTokenService sysUserTokenService;
	@Autowired
	private SysLogService sysLogService;
	/**
	 * 登录
	 */
	@SysLog("用户登录")
	@RequestMapping(value = "/sys/login", method = RequestMethod.POST)
	public Map<String, Object> login(String username, String password, String captcha)throws IOException {
		String kaptcha = ShiroUtils.getKaptcha(Constants.KAPTCHA_SESSION_KEY);
		Subject subject = ShiroUtils.getSubject();
		if(!captcha.equalsIgnoreCase(kaptcha)){
			return R.error("验证码不正确");
		}
		//用户信息
		SysUserEntity user = sysUserService.queryByUserName(username);
		//账号不存在、密码错误
		if(user == null || !user.getPassword().equals(ApplicationUtils.md5(password))) {
			return R.error("账号或密码不正确");
		}
		//账号锁定
		if(user.getStatus() == 0){
			return R.error("账号已被锁定,请联系管理员");
		}
		subject.login(new UsernamePasswordToken(username ,password));
		return R.ok().put("user",user);
	}

	@RequestMapping(value = "/sys/logout", method = RequestMethod.POST)
	public R logout() {
		ShiroUtils.getSubject().logout();
		return R.ok();
	}
}
