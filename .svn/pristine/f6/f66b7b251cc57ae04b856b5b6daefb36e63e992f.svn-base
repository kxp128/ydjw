<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ehootu.census.dao.CensusRegisterAttachmentMapper">
    <resultMap id="BaseResultMap" type="com.ehootu.census.model.CensusRegisterAttachment">
        <id column="id" jdbcType="VARCHAR" property="id"/>
        <result column="guardian_written_application" jdbcType="VARCHAR" property="guardianWrittenApplication"/>
        <result column="medical_proof" jdbcType="VARCHAR" property="medicalProof"/>
        <result column="birth_certificate" jdbcType="VARCHAR" property="birthCertificate"/>
        <result column="baby_blood_type" jdbcType="VARCHAR" property="babyBloodType"/>
        <result column="parents_account" jdbcType="VARCHAR" property="parentsAccount"/>
        <result column="parents_marriage_certificate" jdbcType="VARCHAR" property="parentsMarriageCertificate"/>
        <result column="patron_written_application" jdbcType="VARCHAR" property="patronWrittenApplication"/>
        <result column="married_certificate" jdbcType="VARCHAR" property="marriedCertificate"/>
        <result column="borth_census_register" jdbcType="VARCHAR" property="borthCensusRegister"/>
        <result column="borth_card" jdbcType="VARCHAR" property="borthCard"/>
        <result column="death_certificate" jdbcType="VARCHAR" property="deathCertificate"/>
        <result column="census_register" jdbcType="VARCHAR" property="censusRegister"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="update_time" jdbcType="TIMESTAMP" property="updateTime"/>
        <result column="delete_flag" jdbcType="INTEGER" property="deleteFlag"/>
        <result column="spare_field1" jdbcType="INTEGER" property="spareField1"/>
        <result column="spare_field2" jdbcType="VARCHAR" property="spareField2"/>
        <result column="spare_field3" jdbcType="VARCHAR" property="spareField3"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
    id, guardian_written_application, medical_proof, birth_certificate, baby_blood_type, 
    parents_account, parents_marriage_certificate, patron_written_application, married_certificate, 
    borth_census_register, borth_card, death_certificate, census_register, create_time, 
    update_time, delete_flag, spare_field1, spare_field2, spare_field3
  </sql>
    <select id="selectByExample" parameterType="com.ehootu.census.model.CensusRegisterAttachmentExample"
            resultMap="BaseResultMap">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from census_register_attachment
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from census_register_attachment
        where id = #{id,jdbcType=VARCHAR}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from census_register_attachment
    where id = #{id,jdbcType=VARCHAR}
  </delete>
    <delete id="deleteByExample" parameterType="com.ehootu.census.model.CensusRegisterAttachmentExample">
        delete from census_register_attachment
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="com.ehootu.census.model.CensusRegisterAttachment">
        <selectKey keyProperty="id" order="BEFORE" resultType="java.lang.String">select UUID()</selectKey>
        insert into census_register_attachment (id, guardian_written_application, medical_proof,
        birth_certificate, baby_blood_type, parents_account,
        parents_marriage_certificate, patron_written_application,
        married_certificate, borth_census_register,
        borth_card, death_certificate, census_register,
        create_time, update_time, delete_flag,
        spare_field1, spare_field2, spare_field3
        )
        values (#{id,jdbcType=VARCHAR}, #{guardianWrittenApplication,jdbcType=VARCHAR},
        #{medicalProof,jdbcType=VARCHAR},
        #{birthCertificate,jdbcType=VARCHAR}, #{babyBloodType,jdbcType=VARCHAR}, #{parentsAccount,jdbcType=VARCHAR},
        #{parentsMarriageCertificate,jdbcType=VARCHAR}, #{patronWrittenApplication,jdbcType=VARCHAR},
        #{marriedCertificate,jdbcType=VARCHAR}, #{borthCensusRegister,jdbcType=VARCHAR},
        #{borthCard,jdbcType=VARCHAR}, #{deathCertificate,jdbcType=VARCHAR}, #{censusRegister,jdbcType=VARCHAR},
        #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, #{deleteFlag,jdbcType=INTEGER},
        #{spareField1,jdbcType=INTEGER}, #{spareField2,jdbcType=VARCHAR}, #{spareField3,jdbcType=VARCHAR}
        )
    </insert>
    <insert id="insertSelective" parameterType="com.ehootu.census.model.CensusRegisterAttachment"
            useGeneratedKeys="true" keyProperty="id">
        <selectKey keyProperty="id" order="BEFORE" resultType="java.lang.String">select UUID()</selectKey>
        insert into census_register_attachment
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="guardianWrittenApplication != null">
                guardian_written_application,
            </if>
            <if test="medicalProof != null">
                medical_proof,
            </if>
            <if test="birthCertificate != null">
                birth_certificate,
            </if>
            <if test="babyBloodType != null">
                baby_blood_type,
            </if>
            <if test="parentsAccount != null">
                parents_account,
            </if>
            <if test="parentsMarriageCertificate != null">
                parents_marriage_certificate,
            </if>
            <if test="patronWrittenApplication != null">
                patron_written_application,
            </if>
            <if test="marriedCertificate != null">
                married_certificate,
            </if>
            <if test="borthCensusRegister != null">
                borth_census_register,
            </if>
            <if test="borthCard != null">
                borth_card,
            </if>
            <if test="deathCertificate != null">
                death_certificate,
            </if>
            <if test="censusRegister != null">
                census_register,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="updateTime != null">
                update_time,
            </if>
            <if test="deleteFlag != null">
                delete_flag,
            </if>
            <if test="spareField1 != null">
                spare_field1,
            </if>
            <if test="spareField2 != null">
                spare_field2,
            </if>
            <if test="spareField3 != null">
                spare_field3,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=VARCHAR},
            </if>
            <if test="guardianWrittenApplication != null">
                #{guardianWrittenApplication,jdbcType=VARCHAR},
            </if>
            <if test="medicalProof != null">
                #{medicalProof,jdbcType=VARCHAR},
            </if>
            <if test="birthCertificate != null">
                #{birthCertificate,jdbcType=VARCHAR},
            </if>
            <if test="babyBloodType != null">
                #{babyBloodType,jdbcType=VARCHAR},
            </if>
            <if test="parentsAccount != null">
                #{parentsAccount,jdbcType=VARCHAR},
            </if>
            <if test="parentsMarriageCertificate != null">
                #{parentsMarriageCertificate,jdbcType=VARCHAR},
            </if>
            <if test="patronWrittenApplication != null">
                #{patronWrittenApplication,jdbcType=VARCHAR},
            </if>
            <if test="marriedCertificate != null">
                #{marriedCertificate,jdbcType=VARCHAR},
            </if>
            <if test="borthCensusRegister != null">
                #{borthCensusRegister,jdbcType=VARCHAR},
            </if>
            <if test="borthCard != null">
                #{borthCard,jdbcType=VARCHAR},
            </if>
            <if test="deathCertificate != null">
                #{deathCertificate,jdbcType=VARCHAR},
            </if>
            <if test="censusRegister != null">
                #{censusRegister,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                #{updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="deleteFlag != null">
                #{deleteFlag,jdbcType=INTEGER},
            </if>
            <if test="spareField1 != null">
                #{spareField1,jdbcType=INTEGER},
            </if>
            <if test="spareField2 != null">
                #{spareField2,jdbcType=VARCHAR},
            </if>
            <if test="spareField3 != null">
                #{spareField3,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.ehootu.census.model.CensusRegisterAttachmentExample"
            resultType="java.lang.Long">
        select count(*) from census_register_attachment
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update census_register_attachment
        <set>
            <if test="record.id != null">
                id = #{record.id,jdbcType=VARCHAR},
            </if>
            <if test="record.guardianWrittenApplication != null">
                guardian_written_application = #{record.guardianWrittenApplication,jdbcType=VARCHAR},
            </if>
            <if test="record.medicalProof != null">
                medical_proof = #{record.medicalProof,jdbcType=VARCHAR},
            </if>
            <if test="record.birthCertificate != null">
                birth_certificate = #{record.birthCertificate,jdbcType=VARCHAR},
            </if>
            <if test="record.babyBloodType != null">
                baby_blood_type = #{record.babyBloodType,jdbcType=VARCHAR},
            </if>
            <if test="record.parentsAccount != null">
                parents_account = #{record.parentsAccount,jdbcType=VARCHAR},
            </if>
            <if test="record.parentsMarriageCertificate != null">
                parents_marriage_certificate = #{record.parentsMarriageCertificate,jdbcType=VARCHAR},
            </if>
            <if test="record.patronWrittenApplication != null">
                patron_written_application = #{record.patronWrittenApplication,jdbcType=VARCHAR},
            </if>
            <if test="record.marriedCertificate != null">
                married_certificate = #{record.marriedCertificate,jdbcType=VARCHAR},
            </if>
            <if test="record.borthCensusRegister != null">
                borth_census_register = #{record.borthCensusRegister,jdbcType=VARCHAR},
            </if>
            <if test="record.borthCard != null">
                borth_card = #{record.borthCard,jdbcType=VARCHAR},
            </if>
            <if test="record.deathCertificate != null">
                death_certificate = #{record.deathCertificate,jdbcType=VARCHAR},
            </if>
            <if test="record.censusRegister != null">
                census_register = #{record.censusRegister,jdbcType=VARCHAR},
            </if>
            <if test="record.createTime != null">
                create_time = #{record.createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="record.updateTime != null">
                update_time = #{record.updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="record.deleteFlag != null">
                delete_flag = #{record.deleteFlag,jdbcType=INTEGER},
            </if>
            <if test="record.spareField1 != null">
                spare_field1 = #{record.spareField1,jdbcType=INTEGER},
            </if>
            <if test="record.spareField2 != null">
                spare_field2 = #{record.spareField2,jdbcType=VARCHAR},
            </if>
            <if test="record.spareField3 != null">
                spare_field3 = #{record.spareField3,jdbcType=VARCHAR},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update census_register_attachment
        set id = #{record.id,jdbcType=VARCHAR},
        guardian_written_application = #{record.guardianWrittenApplication,jdbcType=VARCHAR},
        medical_proof = #{record.medicalProof,jdbcType=VARCHAR},
        birth_certificate = #{record.birthCertificate,jdbcType=VARCHAR},
        baby_blood_type = #{record.babyBloodType,jdbcType=VARCHAR},
        parents_account = #{record.parentsAccount,jdbcType=VARCHAR},
        parents_marriage_certificate = #{record.parentsMarriageCertificate,jdbcType=VARCHAR},
        patron_written_application = #{record.patronWrittenApplication,jdbcType=VARCHAR},
        married_certificate = #{record.marriedCertificate,jdbcType=VARCHAR},
        borth_census_register = #{record.borthCensusRegister,jdbcType=VARCHAR},
        borth_card = #{record.borthCard,jdbcType=VARCHAR},
        death_certificate = #{record.deathCertificate,jdbcType=VARCHAR},
        census_register = #{record.censusRegister,jdbcType=VARCHAR},
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
        delete_flag = #{record.deleteFlag,jdbcType=INTEGER},
        spare_field1 = #{record.spareField1,jdbcType=INTEGER},
        spare_field2 = #{record.spareField2,jdbcType=VARCHAR},
        spare_field3 = #{record.spareField3,jdbcType=VARCHAR}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.ehootu.census.model.CensusRegisterAttachment">
        update census_register_attachment
        <set>
            <if test="guardianWrittenApplication != null">
                guardian_written_application = #{guardianWrittenApplication,jdbcType=VARCHAR},
            </if>
            <if test="medicalProof != null">
                medical_proof = #{medicalProof,jdbcType=VARCHAR},
            </if>
            <if test="birthCertificate != null">
                birth_certificate = #{birthCertificate,jdbcType=VARCHAR},
            </if>
            <if test="babyBloodType != null">
                baby_blood_type = #{babyBloodType,jdbcType=VARCHAR},
            </if>
            <if test="parentsAccount != null">
                parents_account = #{parentsAccount,jdbcType=VARCHAR},
            </if>
            <if test="parentsMarriageCertificate != null">
                parents_marriage_certificate = #{parentsMarriageCertificate,jdbcType=VARCHAR},
            </if>
            <if test="patronWrittenApplication != null">
                patron_written_application = #{patronWrittenApplication,jdbcType=VARCHAR},
            </if>
            <if test="marriedCertificate != null">
                married_certificate = #{marriedCertificate,jdbcType=VARCHAR},
            </if>
            <if test="borthCensusRegister != null">
                borth_census_register = #{borthCensusRegister,jdbcType=VARCHAR},
            </if>
            <if test="borthCard != null">
                borth_card = #{borthCard,jdbcType=VARCHAR},
            </if>
            <if test="deathCertificate != null">
                death_certificate = #{deathCertificate,jdbcType=VARCHAR},
            </if>
            <if test="censusRegister != null">
                census_register = #{censusRegister,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="deleteFlag != null">
                delete_flag = #{deleteFlag,jdbcType=INTEGER},
            </if>
            <if test="spareField1 != null">
                spare_field1 = #{spareField1,jdbcType=INTEGER},
            </if>
            <if test="spareField2 != null">
                spare_field2 = #{spareField2,jdbcType=VARCHAR},
            </if>
            <if test="spareField3 != null">
                spare_field3 = #{spareField3,jdbcType=VARCHAR},
            </if>
        </set>
        where id = #{id,jdbcType=VARCHAR}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.ehootu.census.model.CensusRegisterAttachment">
    update census_register_attachment
    set guardian_written_application = #{guardianWrittenApplication,jdbcType=VARCHAR},
      medical_proof = #{medicalProof,jdbcType=VARCHAR},
      birth_certificate = #{birthCertificate,jdbcType=VARCHAR},
      baby_blood_type = #{babyBloodType,jdbcType=VARCHAR},
      parents_account = #{parentsAccount,jdbcType=VARCHAR},
      parents_marriage_certificate = #{parentsMarriageCertificate,jdbcType=VARCHAR},
      patron_written_application = #{patronWrittenApplication,jdbcType=VARCHAR},
      married_certificate = #{marriedCertificate,jdbcType=VARCHAR},
      borth_census_register = #{borthCensusRegister,jdbcType=VARCHAR},
      borth_card = #{borthCard,jdbcType=VARCHAR},
      death_certificate = #{deathCertificate,jdbcType=VARCHAR},
      census_register = #{censusRegister,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      delete_flag = #{deleteFlag,jdbcType=INTEGER},
      spare_field1 = #{spareField1,jdbcType=INTEGER},
      spare_field2 = #{spareField2,jdbcType=VARCHAR},
      spare_field3 = #{spareField3,jdbcType=VARCHAR}
    where id = #{id,jdbcType=VARCHAR}
  </update>
</mapper>