<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ehootu.census.dao.CensusApprovalSetMapper">
    <resultMap id="BaseResultMap" type="com.ehootu.census.model.CensusApprovalSet">
        <id column="id" jdbcType="VARCHAR" property="id"/>
        <result column="approval_set_content" jdbcType="INTEGER" property="approvalSetContent"/>
        <result column="approval_set_tier" jdbcType="INTEGER" property="approvalSetTier"/>
        <result column="approval_set_level" jdbcType="INTEGER" property="approvalSetLevel"/>
        <result column="approval_set_person" jdbcType="VARCHAR" property="approvalSetPerson"/>
        <result column="approval_set_number" jdbcType="VARCHAR" property="approvalSetNumber"/>
        <result column="police_station" jdbcType="VARCHAR" property="policeStation"/>
        <result column="police_office" jdbcType="VARCHAR" property="policeOffice"/>
        <result column="work_station" jdbcType="VARCHAR" property="workStation"/>
        <result column="administrative_division" jdbcType="VARCHAR" property="administrativeDivision"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="update_time" jdbcType="TIMESTAMP" property="updateTime"/>
        <result column="delete_flag" jdbcType="INTEGER" property="deleteFlag"/>
        <result column="spare_field1" jdbcType="VARCHAR" property="spareField1"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
    id, approval_set_content, approval_set_tier, approval_set_level, approval_set_person, 
    approval_set_number, police_station, police_office, work_station, administrative_division, 
    create_time, update_time, delete_flag, spare_field1
  </sql>
    <select id="selectByExample" parameterType="com.ehootu.census.model.CensusApprovalSetExample"
            resultMap="BaseResultMap">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from census_approval_set
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from census_approval_set
        where id = #{id,jdbcType=VARCHAR}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from census_approval_set
    where id = #{id,jdbcType=VARCHAR}
  </delete>
    <delete id="deleteByExample" parameterType="com.ehootu.census.model.CensusApprovalSetExample">
        delete from census_approval_set
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="com.ehootu.census.model.CensusApprovalSet">
        <selectKey keyProperty="id" order="BEFORE" resultType="java.lang.String">select UUID()</selectKey>
        insert into census_approval_set (id, approval_set_content, approval_set_tier,
        approval_set_level, approval_set_person, approval_set_number,
        police_station, police_office, work_station,
        administrative_division, create_time, update_time,
        delete_flag, spare_field1)
        values (#{id,jdbcType=VARCHAR}, #{approvalSetContent,jdbcType=INTEGER}, #{approvalSetTier,jdbcType=INTEGER},
        #{approvalSetLevel,jdbcType=INTEGER}, #{approvalSetPerson,jdbcType=VARCHAR},
        #{approvalSetNumber,jdbcType=VARCHAR},
        #{policeStation,jdbcType=VARCHAR}, #{policeOffice,jdbcType=VARCHAR}, #{workStation,jdbcType=VARCHAR},
        #{administrativeDivision,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP},
        #{deleteFlag,jdbcType=INTEGER}, #{spareField1,jdbcType=VARCHAR})
    </insert>
    <insert id="insertSelective" parameterType="com.ehootu.census.model.CensusApprovalSet">
        <selectKey keyProperty="id" order="BEFORE" resultType="java.lang.String">select UUID()</selectKey>
        insert into census_approval_set
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="approvalSetContent != null">
                approval_set_content,
            </if>
            <if test="approvalSetTier != null">
                approval_set_tier,
            </if>
            <if test="approvalSetLevel != null">
                approval_set_level,
            </if>
            <if test="approvalSetPerson != null">
                approval_set_person,
            </if>
            <if test="approvalSetNumber != null">
                approval_set_number,
            </if>
            <if test="policeStation != null">
                police_station,
            </if>
            <if test="policeOffice != null">
                police_office,
            </if>
            <if test="workStation != null">
                work_station,
            </if>
            <if test="administrativeDivision != null">
                administrative_division,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="updateTime != null">
                update_time,
            </if>
            <if test="deleteFlag != null">
                delete_flag,
            </if>
            <if test="spareField1 != null">
                spare_field1,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=VARCHAR},
            </if>
            <if test="approvalSetContent != null">
                #{approvalSetContent,jdbcType=INTEGER},
            </if>
            <if test="approvalSetTier != null">
                #{approvalSetTier,jdbcType=INTEGER},
            </if>
            <if test="approvalSetLevel != null">
                #{approvalSetLevel,jdbcType=INTEGER},
            </if>
            <if test="approvalSetPerson != null">
                #{approvalSetPerson,jdbcType=VARCHAR},
            </if>
            <if test="approvalSetNumber != null">
                #{approvalSetNumber,jdbcType=VARCHAR},
            </if>
            <if test="policeStation != null">
                #{policeStation,jdbcType=VARCHAR},
            </if>
            <if test="policeOffice != null">
                #{policeOffice,jdbcType=VARCHAR},
            </if>
            <if test="workStation != null">
                #{workStation,jdbcType=VARCHAR},
            </if>
            <if test="administrativeDivision != null">
                #{administrativeDivision,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                #{updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="deleteFlag != null">
                #{deleteFlag,jdbcType=INTEGER},
            </if>
            <if test="spareField1 != null">
                #{spareField1,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.ehootu.census.model.CensusApprovalSetExample"
            resultType="java.lang.Long">
        select count(*) from census_approval_set
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update census_approval_set
        <set>
            <if test="record.id != null">
                id = #{record.id,jdbcType=VARCHAR},
            </if>
            <if test="record.approvalSetContent != null">
                approval_set_content = #{record.approvalSetContent,jdbcType=INTEGER},
            </if>
            <if test="record.approvalSetTier != null">
                approval_set_tier = #{record.approvalSetTier,jdbcType=INTEGER},
            </if>
            <if test="record.approvalSetLevel != null">
                approval_set_level = #{record.approvalSetLevel,jdbcType=INTEGER},
            </if>
            <if test="record.approvalSetPerson != null">
                approval_set_person = #{record.approvalSetPerson,jdbcType=VARCHAR},
            </if>
            <if test="record.approvalSetNumber != null">
                approval_set_number = #{record.approvalSetNumber,jdbcType=VARCHAR},
            </if>
            <if test="record.policeStation != null">
                police_station = #{record.policeStation,jdbcType=VARCHAR},
            </if>
            <if test="record.policeOffice != null">
                police_office = #{record.policeOffice,jdbcType=VARCHAR},
            </if>
            <if test="record.workStation != null">
                work_station = #{record.workStation,jdbcType=VARCHAR},
            </if>
            <if test="record.administrativeDivision != null">
                administrative_division = #{record.administrativeDivision,jdbcType=VARCHAR},
            </if>
            <if test="record.createTime != null">
                create_time = #{record.createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="record.updateTime != null">
                update_time = #{record.updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="record.deleteFlag != null">
                delete_flag = #{record.deleteFlag,jdbcType=INTEGER},
            </if>
            <if test="record.spareField1 != null">
                spare_field1 = #{record.spareField1,jdbcType=VARCHAR},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update census_approval_set
        set id = #{record.id,jdbcType=VARCHAR},
        approval_set_content = #{record.approvalSetContent,jdbcType=INTEGER},
        approval_set_tier = #{record.approvalSetTier,jdbcType=INTEGER},
        approval_set_level = #{record.approvalSetLevel,jdbcType=INTEGER},
        approval_set_person = #{record.approvalSetPerson,jdbcType=VARCHAR},
        approval_set_number = #{record.approvalSetNumber,jdbcType=VARCHAR},
        police_station = #{record.policeStation,jdbcType=VARCHAR},
        police_office = #{record.policeOffice,jdbcType=VARCHAR},
        work_station = #{record.workStation,jdbcType=VARCHAR},
        administrative_division = #{record.administrativeDivision,jdbcType=VARCHAR},
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
        delete_flag = #{record.deleteFlag,jdbcType=INTEGER},
        spare_field1 = #{record.spareField1,jdbcType=VARCHAR}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.ehootu.census.model.CensusApprovalSet">
        update census_approval_set
        <set>
            <if test="approvalSetContent != null">
                approval_set_content = #{approvalSetContent,jdbcType=INTEGER},
            </if>
            <if test="approvalSetTier != null">
                approval_set_tier = #{approvalSetTier,jdbcType=INTEGER},
            </if>
            <if test="approvalSetLevel != null">
                approval_set_level = #{approvalSetLevel,jdbcType=INTEGER},
            </if>
            <if test="approvalSetPerson != null">
                approval_set_person = #{approvalSetPerson,jdbcType=VARCHAR},
            </if>
            <if test="approvalSetNumber != null">
                approval_set_number = #{approvalSetNumber,jdbcType=VARCHAR},
            </if>
            <if test="policeStation != null">
                police_station = #{policeStation,jdbcType=VARCHAR},
            </if>
            <if test="policeOffice != null">
                police_office = #{policeOffice,jdbcType=VARCHAR},
            </if>
            <if test="workStation != null">
                work_station = #{workStation,jdbcType=VARCHAR},
            </if>
            <if test="administrativeDivision != null">
                administrative_division = #{administrativeDivision,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="deleteFlag != null">
                delete_flag = #{deleteFlag,jdbcType=INTEGER},
            </if>
            <if test="spareField1 != null">
                spare_field1 = #{spareField1,jdbcType=VARCHAR},
            </if>
        </set>
        where id = #{id,jdbcType=VARCHAR}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.ehootu.census.model.CensusApprovalSet">
    update census_approval_set
    set approval_set_content = #{approvalSetContent,jdbcType=INTEGER},
      approval_set_tier = #{approvalSetTier,jdbcType=INTEGER},
      approval_set_level = #{approvalSetLevel,jdbcType=INTEGER},
      approval_set_person = #{approvalSetPerson,jdbcType=VARCHAR},
      approval_set_number = #{approvalSetNumber,jdbcType=VARCHAR},
      police_station = #{policeStation,jdbcType=VARCHAR},
      police_office = #{policeOffice,jdbcType=VARCHAR},
      work_station = #{workStation,jdbcType=VARCHAR},
      administrative_division = #{administrativeDivision,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      delete_flag = #{deleteFlag,jdbcType=INTEGER},
      spare_field1 = #{spareField1,jdbcType=VARCHAR}
    where id = #{id,jdbcType=VARCHAR}
  </update>
    <!--
      根据警察id查询警察属于哪个审核阶段（不存在一个警察同时在多个不同的审核阶段）
    -->
    <select id="queryCensusApprovalSetByPoliceId" parameterType="java.util.Map" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from census_approval_set
        where FIND_IN_SET(#{policeId},approval_set_person)
    </select>
</mapper>