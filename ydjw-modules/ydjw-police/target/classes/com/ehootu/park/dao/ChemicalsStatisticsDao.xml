<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.ehootu.park.dao.ChemicalsStatisticsDao">

    <!-- 可根据自己的需求，是否要使用 -->
    <resultMap type="com.ehootu.park.model.ChemicalsStatisticsEntity" id="chemicalsStatisticsMap">
        <result property="id" column="id"/>
        <result property="policeStation" column="police_station"/>
        <result property="policeOffice" column="police_office"/>
        <result property="chemicalIncharge" column="chemical_incharge"/>
        <result property="chemicalType" column="chemical_type"/>
        <result property="stockman" column="stockman"/>
        <result property="securityMethod" column="security_method"/>
        <result property="punishRecord" column="punish_record"/>
        <result property="policeId" column="police_id"/>
        <result property="date" column="date"/>
        <result property="publicId" column="public_id"/>
        <result property="taskId" column="task_id"/>
        <collection property="publicInformation" ofType="com.ehootu.park.model.PublicInformationEntity">
            <result property="id" column="id"/>
            <result property="enterpriseAddress" column="enterprise_address"/>
            <result property="enterpriseName" column="enterprise_name"/>
        </collection>
    </resultMap>


    <select id="queryObject" resultMap="chemicalsStatisticsMap">
		select enterprise.*,public.enterprise_address,public.enterprise_name from chemicals_statistics enterprise 
			left join public_information public on public.id=enterprise.public_id
			where enterprise.id = #{value}
	</select>
    <select id="select" resultMap="chemicalsStatisticsMap">
		select enterprise.*,public.enterprise_address,public.enterprise_name from chemicals_statistics enterprise 
			left join public_information public on public.id=enterprise.public_id
		where enterprise.police_id = #{value}
	</select>

    <select id="queryList" parameterType="java.util.Map" resultMap="chemicalsStatisticsMap">
        select enterprise.*,public.enterprise_address,public.enterprise_name from chemicals_statistics enterprise
        left join public_information public on public.id=enterprise.public_id
        where enterprise.police_id = #{policeId}
        order by enterprise.id desc
        <if test="offset != null and limit != null">
            limit #{offset}, #{limit}
        </if>
    </select>

    <insert id="saveAndGetId" parameterType="com.ehootu.park.model.ChemicalsStatisticsEntity" useGeneratedKeys="true"
            keyProperty="id">
        <selectKey keyProperty="id" order="BEFORE" resultType="java.lang.String">select UUID()</selectKey>
        insert into chemicals_statistics
        (
        `id`,
        `police_station`,
        `police_office`,
        `chemical_incharge`,
        `chemical_type`,
        `stockman`,
        `security_method`,
        `punish_record`,
        `police_id`,
        `date`,
        `task_id`,
        `public_id`
        )
        values
        (
        #{id,jdbcType=VARCHAR},
        #{policeStation},
        #{policeOffice},
        #{chemicalIncharge},
        #{chemicalType},
        #{stockman},
        #{securityMethod},
        #{punishRecord},
        #{policeId},
        #{date},
        #{taskId},
        #{publicId}
        )
    </insert>

    <update id="update" parameterType="com.ehootu.park.model.ChemicalsStatisticsEntity">
        update chemicals_statistics
        <set>
            <if test="policeStation != null">`police_station` = #{policeStation},</if>
            <if test="policeOffice != null">`police_office` = #{policeOffice},</if>
            <if test="enterpriseName != null">`enterprise_name` = #{enterpriseName},</if>
            <if test="enterpriseAddress != null">`enterprise_address` = #{enterpriseAddress},</if>
            <if test="chemicalIncharge != null">`chemical_incharge` = #{chemicalIncharge},</if>
            <if test="chemicalType != null">`chemical_type` = #{chemicalType},</if>
            <if test="stockman != null">`stockman` = #{stockman},</if>
            <if test="securityMethod != null">`security_method` = #{securityMethod},</if>
            <if test="punishRecord != null">`punish_record` = #{punishRecord},</if>
            <if test="taskId != null">`task_id` = #{taskId},</if>
            <if test="policeId != null">`police_id` = #{policeId}</if>
        </set>
        where id = #{id}
    </update>

    <delete id="delete">
		delete from chemicals_statistics where id = #{value}
	</delete>

    <delete id="deleteBatch">
        delete from chemicals_statistics where id in
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>

</mapper>