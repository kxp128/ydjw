<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ehootu.task.dao.TaskMapper">
    <resultMap id="BaseResultMap" type="com.ehootu.task.model.Task">
        <id column="id" jdbcType="VARCHAR" property="id"/>
        <result column="task_type" jdbcType="INTEGER" property="taskType"/>
        <result column="task_status" jdbcType="INTEGER" property="taskStatus"/>
        <result column="execution_times" jdbcType="INTEGER" property="executionTimes"/>
        <result column="completion_times" jdbcType="INTEGER" property="completionTimes"/>
        <result column="executor_id" jdbcType="VARCHAR" property="executorId"/>
        <result column="create_person_name" jdbcType="VARCHAR" property="createPersonName"/>
        <result column="create_person_id" jdbcType="VARCHAR" property="createPersonId"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="update_time" jdbcType="TIMESTAMP" property="updateTime"/>
        <result column="begin_time" jdbcType="TIMESTAMP" property="beginTime"/>
        <result column="end_time" jdbcType="TIMESTAMP" property="endTime"/>
        <result column="spare_field1" jdbcType="INTEGER" property="spareField1"/>
        <result column="spare_field2" jdbcType="INTEGER" property="spareField2"/>
        <result column="spare_field3" jdbcType="INTEGER" property="spareField3"/>
        <result column="spare_field4" jdbcType="VARCHAR" property="spareField4"/>
        <result column="spare_field5" jdbcType="VARCHAR" property="spareField5"/>
        <result column="spare_field6" jdbcType="VARCHAR" property="spareField6"/>
    </resultMap>
    <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.ehootu.task.model.Task">
        <result column="task_content" jdbcType="LONGVARCHAR" property="taskContent"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
    id, task_type, task_status, execution_times, completion_times, executor_id, create_person_name, 
    create_person_id, create_time, update_time, begin_time, end_time, spare_field1, spare_field2, 
    spare_field3, spare_field4, spare_field5, spare_field6
  </sql>
    <sql id="Blob_Column_List">
    task_content
  </sql>
    <select id="selectByExampleWithBLOBs" parameterType="com.ehootu.task.model.TaskExample"
            resultMap="ResultMapWithBLOBs">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        ,
        <include refid="Blob_Column_List"/>
        from task
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByExample" parameterType="com.ehootu.task.model.TaskExample" resultMap="BaseResultMap">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from task
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="ResultMapWithBLOBs">
        select
        <include refid="Base_Column_List"/>
        ,
        <include refid="Blob_Column_List"/>
        from task
        where id = #{id,jdbcType=VARCHAR}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from task
    where id = #{id,jdbcType=VARCHAR}
  </delete>
    <delete id="deleteByExample" parameterType="com.ehootu.task.model.TaskExample">
        delete from task
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="com.ehootu.task.model.Task">
        <selectKey keyProperty="id" order="BEFORE" resultType="java.lang.String">select UUID()</selectKey>
        insert into task (id, task_type, task_status,
        execution_times, completion_times, executor_id,
        create_person_name, create_person_id, create_time,
        update_time, begin_time, end_time,
        spare_field1, spare_field2, spare_field3,
        spare_field4, spare_field5, spare_field6,
        task_content)
        values (#{id,jdbcType=VARCHAR}, #{taskType,jdbcType=INTEGER}, #{taskStatus,jdbcType=INTEGER},
        #{executionTimes,jdbcType=INTEGER}, #{completionTimes,jdbcType=INTEGER}, #{executorId,jdbcType=VARCHAR},
        #{createPersonName,jdbcType=VARCHAR}, #{createPersonId,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP},
        #{updateTime,jdbcType=TIMESTAMP}, #{beginTime,jdbcType=TIMESTAMP}, #{endTime,jdbcType=TIMESTAMP},
        #{spareField1,jdbcType=INTEGER}, #{spareField2,jdbcType=INTEGER}, #{spareField3,jdbcType=INTEGER},
        #{spareField4,jdbcType=VARCHAR}, #{spareField5,jdbcType=VARCHAR}, #{spareField6,jdbcType=VARCHAR},
        #{taskContent,jdbcType=LONGVARCHAR})
    </insert>
    <insert id="insertSelective" parameterType="com.ehootu.task.model.Task">
        <selectKey keyProperty="id" order="BEFORE" resultType="java.lang.String">select UUID()</selectKey>
        insert into task
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="taskType != null">
                task_type,
            </if>
            <if test="taskStatus != null">
                task_status,
            </if>
            <if test="executionTimes != null">
                execution_times,
            </if>
            <if test="completionTimes != null">
                completion_times,
            </if>
            <if test="executorId != null">
                executor_id,
            </if>
            <if test="createPersonName != null">
                create_person_name,
            </if>
            <if test="createPersonId != null">
                create_person_id,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="updateTime != null">
                update_time,
            </if>
            <if test="beginTime != null">
                begin_time,
            </if>
            <if test="endTime != null">
                end_time,
            </if>
            <if test="spareField1 != null">
                spare_field1,
            </if>
            <if test="spareField2 != null">
                spare_field2,
            </if>
            <if test="spareField3 != null">
                spare_field3,
            </if>
            <if test="spareField4 != null">
                spare_field4,
            </if>
            <if test="spareField5 != null">
                spare_field5,
            </if>
            <if test="spareField6 != null">
                spare_field6,
            </if>
            <if test="taskContent != null">
                task_content,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=VARCHAR},
            </if>
            <if test="taskType != null">
                #{taskType,jdbcType=INTEGER},
            </if>
            <if test="taskStatus != null">
                #{taskStatus,jdbcType=INTEGER},
            </if>
            <if test="executionTimes != null">
                #{executionTimes,jdbcType=INTEGER},
            </if>
            <if test="completionTimes != null">
                #{completionTimes,jdbcType=INTEGER},
            </if>
            <if test="executorId != null">
                #{executorId,jdbcType=VARCHAR},
            </if>
            <if test="createPersonName != null">
                #{createPersonName,jdbcType=VARCHAR},
            </if>
            <if test="createPersonId != null">
                #{createPersonId,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                #{updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="beginTime != null">
                #{beginTime,jdbcType=TIMESTAMP},
            </if>
            <if test="endTime != null">
                #{endTime,jdbcType=TIMESTAMP},
            </if>
            <if test="spareField1 != null">
                #{spareField1,jdbcType=INTEGER},
            </if>
            <if test="spareField2 != null">
                #{spareField2,jdbcType=INTEGER},
            </if>
            <if test="spareField3 != null">
                #{spareField3,jdbcType=INTEGER},
            </if>
            <if test="spareField4 != null">
                #{spareField4,jdbcType=VARCHAR},
            </if>
            <if test="spareField5 != null">
                #{spareField5,jdbcType=VARCHAR},
            </if>
            <if test="spareField6 != null">
                #{spareField6,jdbcType=VARCHAR},
            </if>
            <if test="taskContent != null">
                #{taskContent,jdbcType=LONGVARCHAR},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.ehootu.task.model.TaskExample" resultType="java.lang.Long">
        select count(*) from task
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update task
        <set>
            <if test="record.id != null">
                id = #{record.id,jdbcType=VARCHAR},
            </if>
            <if test="record.taskType != null">
                task_type = #{record.taskType,jdbcType=INTEGER},
            </if>
            <if test="record.taskStatus != null">
                task_status = #{record.taskStatus,jdbcType=INTEGER},
            </if>
            <if test="record.executionTimes != null">
                execution_times = #{record.executionTimes,jdbcType=INTEGER},
            </if>
            <if test="record.completionTimes != null">
                completion_times = #{record.completionTimes,jdbcType=INTEGER},
            </if>
            <if test="record.executorId != null">
                executor_id = #{record.executorId,jdbcType=VARCHAR},
            </if>
            <if test="record.createPersonName != null">
                create_person_name = #{record.createPersonName,jdbcType=VARCHAR},
            </if>
            <if test="record.createPersonId != null">
                create_person_id = #{record.createPersonId,jdbcType=VARCHAR},
            </if>
            <if test="record.createTime != null">
                create_time = #{record.createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="record.updateTime != null">
                update_time = #{record.updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="record.beginTime != null">
                begin_time = #{record.beginTime,jdbcType=TIMESTAMP},
            </if>
            <if test="record.endTime != null">
                end_time = #{record.endTime,jdbcType=TIMESTAMP},
            </if>
            <if test="record.spareField1 != null">
                spare_field1 = #{record.spareField1,jdbcType=INTEGER},
            </if>
            <if test="record.spareField2 != null">
                spare_field2 = #{record.spareField2,jdbcType=INTEGER},
            </if>
            <if test="record.spareField3 != null">
                spare_field3 = #{record.spareField3,jdbcType=INTEGER},
            </if>
            <if test="record.spareField4 != null">
                spare_field4 = #{record.spareField4,jdbcType=VARCHAR},
            </if>
            <if test="record.spareField5 != null">
                spare_field5 = #{record.spareField5,jdbcType=VARCHAR},
            </if>
            <if test="record.spareField6 != null">
                spare_field6 = #{record.spareField6,jdbcType=VARCHAR},
            </if>
            <if test="record.taskContent != null">
                task_content = #{record.taskContent,jdbcType=LONGVARCHAR},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExampleWithBLOBs" parameterType="map">
        update task
        set id = #{record.id,jdbcType=VARCHAR},
        task_type = #{record.taskType,jdbcType=INTEGER},
        task_status = #{record.taskStatus,jdbcType=INTEGER},
        execution_times = #{record.executionTimes,jdbcType=INTEGER},
        completion_times = #{record.completionTimes,jdbcType=INTEGER},
        executor_id = #{record.executorId,jdbcType=VARCHAR},
        create_person_name = #{record.createPersonName,jdbcType=VARCHAR},
        create_person_id = #{record.createPersonId,jdbcType=VARCHAR},
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
        begin_time = #{record.beginTime,jdbcType=TIMESTAMP},
        end_time = #{record.endTime,jdbcType=TIMESTAMP},
        spare_field1 = #{record.spareField1,jdbcType=INTEGER},
        spare_field2 = #{record.spareField2,jdbcType=INTEGER},
        spare_field3 = #{record.spareField3,jdbcType=INTEGER},
        spare_field4 = #{record.spareField4,jdbcType=VARCHAR},
        spare_field5 = #{record.spareField5,jdbcType=VARCHAR},
        spare_field6 = #{record.spareField6,jdbcType=VARCHAR},
        task_content = #{record.taskContent,jdbcType=LONGVARCHAR}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update task
        set id = #{record.id,jdbcType=VARCHAR},
        task_type = #{record.taskType,jdbcType=INTEGER},
        task_status = #{record.taskStatus,jdbcType=INTEGER},
        execution_times = #{record.executionTimes,jdbcType=INTEGER},
        completion_times = #{record.completionTimes,jdbcType=INTEGER},
        executor_id = #{record.executorId,jdbcType=VARCHAR},
        create_person_name = #{record.createPersonName,jdbcType=VARCHAR},
        create_person_id = #{record.createPersonId,jdbcType=VARCHAR},
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
        begin_time = #{record.beginTime,jdbcType=TIMESTAMP},
        end_time = #{record.endTime,jdbcType=TIMESTAMP},
        spare_field1 = #{record.spareField1,jdbcType=INTEGER},
        spare_field2 = #{record.spareField2,jdbcType=INTEGER},
        spare_field3 = #{record.spareField3,jdbcType=INTEGER},
        spare_field4 = #{record.spareField4,jdbcType=VARCHAR},
        spare_field5 = #{record.spareField5,jdbcType=VARCHAR},
        spare_field6 = #{record.spareField6,jdbcType=VARCHAR}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.ehootu.task.model.Task">
        update task
        <set>
            <if test="taskType != null">
                task_type = #{taskType,jdbcType=INTEGER},
            </if>
            <if test="taskStatus != null">
                task_status = #{taskStatus,jdbcType=INTEGER},
            </if>
            <if test="executionTimes != null">
                execution_times = #{executionTimes,jdbcType=INTEGER},
            </if>
            <if test="completionTimes != null">
                completion_times = #{completionTimes,jdbcType=INTEGER},
            </if>
            <if test="executorId != null">
                executor_id = #{executorId,jdbcType=VARCHAR},
            </if>
            <if test="createPersonName != null">
                create_person_name = #{createPersonName,jdbcType=VARCHAR},
            </if>
            <if test="createPersonId != null">
                create_person_id = #{createPersonId,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="beginTime != null">
                begin_time = #{beginTime,jdbcType=TIMESTAMP},
            </if>
            <if test="endTime != null">
                end_time = #{endTime,jdbcType=TIMESTAMP},
            </if>
            <if test="spareField1 != null">
                spare_field1 = #{spareField1,jdbcType=INTEGER},
            </if>
            <if test="spareField2 != null">
                spare_field2 = #{spareField2,jdbcType=INTEGER},
            </if>
            <if test="spareField3 != null">
                spare_field3 = #{spareField3,jdbcType=INTEGER},
            </if>
            <if test="spareField4 != null">
                spare_field4 = #{spareField4,jdbcType=VARCHAR},
            </if>
            <if test="spareField5 != null">
                spare_field5 = #{spareField5,jdbcType=VARCHAR},
            </if>
            <if test="spareField6 != null">
                spare_field6 = #{spareField6,jdbcType=VARCHAR},
            </if>
            <if test="taskContent != null">
                task_content = #{taskContent,jdbcType=LONGVARCHAR},
            </if>
        </set>
        where id = #{id,jdbcType=VARCHAR}
    </update>
    <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.ehootu.task.model.Task">
    update task
    set task_type = #{taskType,jdbcType=INTEGER},
      task_status = #{taskStatus,jdbcType=INTEGER},
      execution_times = #{executionTimes,jdbcType=INTEGER},
      completion_times = #{completionTimes,jdbcType=INTEGER},
      executor_id = #{executorId,jdbcType=VARCHAR},
      create_person_name = #{createPersonName,jdbcType=VARCHAR},
      create_person_id = #{createPersonId,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      begin_time = #{beginTime,jdbcType=TIMESTAMP},
      end_time = #{endTime,jdbcType=TIMESTAMP},
      spare_field1 = #{spareField1,jdbcType=INTEGER},
      spare_field2 = #{spareField2,jdbcType=INTEGER},
      spare_field3 = #{spareField3,jdbcType=INTEGER},
      spare_field4 = #{spareField4,jdbcType=VARCHAR},
      spare_field5 = #{spareField5,jdbcType=VARCHAR},
      spare_field6 = #{spareField6,jdbcType=VARCHAR},
      task_content = #{taskContent,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=VARCHAR}
  </update>
    <update id="updateByPrimaryKey" parameterType="com.ehootu.task.model.Task">
    update task
    set task_type = #{taskType,jdbcType=INTEGER},
      task_status = #{taskStatus,jdbcType=INTEGER},
      execution_times = #{executionTimes,jdbcType=INTEGER},
      completion_times = #{completionTimes,jdbcType=INTEGER},
      executor_id = #{executorId,jdbcType=VARCHAR},
      create_person_name = #{createPersonName,jdbcType=VARCHAR},
      create_person_id = #{createPersonId,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      begin_time = #{beginTime,jdbcType=TIMESTAMP},
      end_time = #{endTime,jdbcType=TIMESTAMP},
      spare_field1 = #{spareField1,jdbcType=INTEGER},
      spare_field2 = #{spareField2,jdbcType=INTEGER},
      spare_field3 = #{spareField3,jdbcType=INTEGER},
      spare_field4 = #{spareField4,jdbcType=VARCHAR},
      spare_field5 = #{spareField5,jdbcType=VARCHAR},
      spare_field6 = #{spareField6,jdbcType=VARCHAR}
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <select id="findByExecutorId" parameterType="com.ehootu.core.util.Query" resultMap="ResultMapWithBLOBs">
    select
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from task
      where  FIND_IN_SET(#{id,jdbcType=VARCHAR},executor_id)
    <if test="taskContent != null and taskContent !=''">
      and task_content  like concat('%',#{taskContent},'%')
    </if>

    <if test="offset != null and limit != null">
      limit #{offset}, #{limit}
    </if>

  </select>

    <select id="queryList" resultMap="ResultMapWithBLOBs">
        select * from task
        <choose>
            <when test="sidx != null and sidx.trim() != ''">
                order by ${sidx} ${order}
            </when>
            <otherwise>
                order by id desc
            </otherwise>
        </choose>
        <if test="offset != null and limit != null">
            limit #{offset}, #{limit}
        </if>
    </select>

    <select id="queryTotal" resultType="int">
        select count(*) from task
    </select>

    <delete id="deleteBatch">
        delete from task where id in
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>
</mapper>